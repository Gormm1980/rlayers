(self.webpackChunkrlayers=self.webpackChunkrlayers||[]).push([[5155],{65155:(r,n,o)=>{"use strict";o.r(n),o.d(n,{default:()=>e});const e="import React, {useCallback} from 'react';\r\nimport {fromLonLat} from 'ol/proj';\r\nimport {Coordinate} from 'ol/coordinate';\r\nimport {Polygon, Point} from 'ol/geom';\r\nimport 'ol/ol.css';\r\n\r\nimport {RMap, ROSM, RLayerVector, RFeature, RPopup} from 'rlayers';\r\nimport {RStyle, RIcon, RFill, RStroke, useRStyle} from 'rlayers/style';\r\n\r\nimport locationIcon from './svg/location.svg';\r\n\r\nconst coords: Record<string, Coordinate> = {\r\n    origin: [2.364, 48.82],\r\n    ArcDeTriomphe: [2.295, 48.8737],\r\n    PlaceDItalie: [2.355, 48.831],\r\n    Bastille: [2.369, 48.853],\r\n    TourEiffel: [2.294, 48.858],\r\n    Montmartre: [2.342, 48.887]\r\n};\r\n\r\nexport default function Popups(): JSX.Element {\r\n    return (\r\n        <RMap className='example-map' center={fromLonLat(coords.origin)} zoom={11}>\r\n            <ROSM />\r\n            <RLayerVector zIndex={10}>\r\n                <RFeature geometry={new Point(fromLonLat(coords.ArcDeTriomphe))}>\r\n                    <RStyle>\r\n                        <RIcon src={locationIcon} anchor={[0.5, 0.8]} />\r\n                    </RStyle>\r\n                    <RPopup trigger={'click'} className='example-overlay'>\r\n                        <div className='card'>\r\n                            <p className='card-header'>\r\n                                <strong>Arc de Triomphe</strong>\r\n                            </p>\r\n                            <p className='card-body text-center'>Popup on click</p>\r\n                        </div>\r\n                    </RPopup>\r\n                </RFeature>\r\n                <RFeature\r\n                    geometry={\r\n                        new Polygon([\r\n                            [\r\n                                fromLonLat(coords.PlaceDItalie),\r\n                                fromLonLat(coords.Bastille),\r\n                                fromLonLat(coords.TourEiffel),\r\n                                fromLonLat(coords.PlaceDItalie)\r\n                            ]\r\n                        ])\r\n                    }\r\n                    onClick={useCallback(\r\n                        (e) =>\r\n                            e.map.getView().fit(e.target.getGeometry().getExtent(), {\r\n                                duration: 250\r\n                            }),\r\n                        []\r\n                    )}\r\n                >\r\n                    <RStyle>\r\n                        <RStroke color='yellow' width={4} />\r\n                        <RFill color='transparent' />\r\n                    </RStyle>\r\n                    <RPopup trigger={'hover'} className='example-overlay'>\r\n                        <p>\r\n                            <strong>Les catacombes</strong>\r\n                        </p>\r\n                        <p>\r\n                            <em>Popup on hover, pan on click</em>\r\n                        </p>\r\n                    </RPopup>\r\n                </RFeature>\r\n            </RLayerVector>\r\n        </RMap>\r\n    );\r\n}\r\n"}}]);