(self.webpackChunkrlayers=self.webpackChunkrlayers||[]).push([[734],{734:(r,e,o)=>{"use strict";o.r(e),o.d(e,{default:()=>n});const n="import React from 'react';\r\nimport {fromLonLat} from 'ol/proj';\r\nimport {Coordinate} from 'ol/coordinate';\r\nimport {Point} from 'ol/geom';\r\nimport 'ol/ol.css';\r\n\r\nimport {RMap, ROSM, RLayerVector, RFeature, ROverlay, RStyle} from 'rlayers';\r\nimport locationIcon from './svg/location.svg';\r\n\r\nconst coords: Record<string, Coordinate> = {\r\n    origin: [2.364, 48.82],\r\n    ArcDeTriomphe: [2.295, 48.8737]\r\n};\r\n\r\nexport default function Overlays(): JSX.Element {\r\n    return (\r\n        <RMap className='example-map' center={fromLonLat(coords.origin)} zoom={11}>\r\n            <ROSM />\r\n            <RLayerVector zIndex={10}>\r\n                <RStyle.RStyle>\r\n                    <RStyle.RIcon src={locationIcon} anchor={[0.5, 0.8]} />\r\n                </RStyle.RStyle>\r\n                <RFeature\r\n                    geometry={new Point(fromLonLat(coords.ArcDeTriomphe))}\r\n                    onClick={(e) =>\r\n                        e.map.getView().fit(e.target.getGeometry().getExtent(), {\r\n                            duration: 250,\r\n                            maxZoom: 15\r\n                        })\r\n                    }\r\n                >\r\n                    <ROverlay className='example-overlay'>\r\n                        Arc de Triomphe\r\n                        <br />\r\n                        <em>&#11017; click to zoom</em>\r\n                    </ROverlay>\r\n                </RFeature>\r\n            </RLayerVector>\r\n        </RMap>\r\n    );\r\n}\r\n"}}]);