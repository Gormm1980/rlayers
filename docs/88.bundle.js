(self.webpackChunkrlayers=self.webpackChunkrlayers||[]).push([[88],{70088:(e,r,t)=>{"use strict";t.r(r),t.d(r,{default:()=>n});const n="/* eslint-disable @typescript-eslint/ban-ts-comment */\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\nimport './example.css';\r\nimport './ghp.css';\r\nimport React from 'react';\r\nimport {HashRouter as Router, Route, Link} from 'react-router-dom';\r\nimport {Button} from 'react-bootstrap';\r\n\r\nconst examples = {\r\n    simple: {title: 'Simple map', file: 'Simple'},\r\n    controls: {title: 'Custom controls', file: 'Controls'},\r\n    overlays: {title: 'Simple overlay', file: 'Overlays'},\r\n    extent: {title: 'Constrained view', file: 'Extent'},\r\n    animation: {title: 'Animated icon', file: 'AnimatedOverlay'},\r\n    overview: {title: 'Overview', file: 'Overview'},\r\n    popups: {title: 'Popups', file: 'Popups'},\r\n    features: {title: 'GeoJSON', file: 'Features'},\r\n    cluster: {title: 'Clustering', file: 'Cluster'},\r\n    heatmap: {title: 'Heatmap', file: 'Heatmap'},\r\n    layers: {title: 'Multiple layers', file: 'Layers'},\r\n    pindrop: {title: 'Drop a pin', file: 'PinDrop'},\r\n    spinner: {title: 'Spinner', file: 'Spinner'},\r\n    geodata: {title: 'Infographics', file: 'GeoData'},\r\n    interactions: {title: 'Move & Select', file: 'Interactions'},\r\n    draw: {title: 'Draw & Modify', file: 'Draw'},\r\n    geolocation: {title: 'Geolocation', file: 'Geolocation'},\r\n    vectortiles: {title: 'Vector tiles', file: 'VectorTiles'},\r\n    reproj: {title: 'Reprojection', file: 'Reprojection'},\r\n    igc: {title: 'Performance', file: 'IGC'}\r\n};\r\n\r\n// These two bring in huge bundles and are lazy-loaded\r\nconst ReadmeBlock = React.lazy(() => import(/* webpackPrefetch: true */ './ReadmeBlock'));\r\nconst CodeBlock = React.lazy(() => import(/* webpackPrefetch: true */ './CodeBlock'));\r\n\r\nfor (const ex of Object.keys(examples)) {\r\n    examples[ex].comp = React.lazy(\r\n        () => import(/* webpackPrefetch: true */ `./${examples[ex].file}.tsx`)\r\n    );\r\n    examples[ex].code = import(\r\n        /* webpackPrefetch: true */ `!!raw-loader!./${examples[ex].file}.tsx`\r\n    ).then((code) => code.default);\r\n}\r\n\r\nconst LeftMenuItem = (props): JSX.Element => (\r\n    <Link to={props.id}>\r\n        <Button block={true} variant='light'>\r\n            {props.title}\r\n        </Button>\r\n    </Link>\r\n);\r\n\r\nconst App = (): JSX.Element => {\r\n    return (\r\n        <Router>\r\n            <h1 className='m-2'>\r\n                <strong>rlayers Examples</strong>\r\n            </h1>\r\n            <div className='d-flex flex-row p-3'>\r\n                <div className='d-flex flex-column left-menu mr-1'>\r\n                    <LeftMenuItem id={''} title={'Home'} />\r\n                    {Object.keys(examples).map((e) => (\r\n                        <LeftMenuItem key={e} id={e} title={examples[e].title} />\r\n                    ))}\r\n                </div>\r\n                <div className='d-flex flex-column w-100 overflow-hidden'>\r\n                    <div className='fluid-container'>\r\n                        <Route exact path='/'>\r\n                            <div className='ml-2'>\r\n                                <React.Suspense fallback={<div>Loading...</div>}>\r\n                                    <ReadmeBlock />\r\n                                </React.Suspense>\r\n                            </div>\r\n                        </Route>\r\n                        {Object.keys(examples).map((e) => (\r\n                            <Route key={e} path={`/${e}`}>\r\n                                <div className='row'>\r\n                                    <div className='col-12 col-xl-5 mb-1'>\r\n                                        <React.Suspense fallback={<div>Loading component...</div>}>\r\n                                            {React.createElement(examples[e].comp)}\r\n                                        </React.Suspense>\r\n                                    </div>\r\n                                    <div className='col-12 col-xl-7 codeblock'>\r\n                                        <React.Suspense fallback={<div>Parsing code...</div>}>\r\n                                            <CodeBlock code={examples[e].code} />\r\n                                        </React.Suspense>\r\n                                    </div>\r\n                                </div>\r\n                            </Route>\r\n                        ))}\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </Router>\r\n    );\r\n};\r\n\r\nexport default App;\r\n"}}]);