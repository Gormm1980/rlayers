(self.webpackChunkrlayers=self.webpackChunkrlayers||[]).push([[88],{70088:(e,t,n)=>{"use strict";n.r(t),n.d(t,{default:()=>l});const l="/* eslint-disable @typescript-eslint/ban-ts-comment */\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport './example.css';\nimport './ghp.css';\nimport React from 'react';\nimport {HashRouter as Router, Route, Link} from 'react-router-dom';\nimport {Button} from 'react-bootstrap';\n\nconst examples = {\n    simple: {title: 'Simple map', file: 'Simple'},\n    controls: {title: 'Custom controls', file: 'Controls'},\n    overlays: {title: 'Simple overlay', file: 'Overlays'},\n    extent: {title: 'Constrained view', file: 'Extent'},\n    animation: {title: 'Animated icon', file: 'AnimatedOverlay'},\n    overview: {title: 'Overview', file: 'Overview'},\n    popups: {title: 'Popups', file: 'Popups'},\n    features: {title: 'GeoJSON', file: 'Features'},\n    cluster: {title: 'Clustering', file: 'Cluster'},\n    heatmap: {title: 'Heatmap', file: 'Heatmap'},\n    layers: {title: 'Multiple layers', file: 'Layers'},\n    pindrop: {title: 'Drop a pin', file: 'PinDrop'},\n    spinner: {title: 'Spinner', file: 'Spinner'},\n    geodata: {title: 'Infographics', file: 'GeoData'},\n    interactions: {title: 'Move & Select', file: 'Interactions'},\n    draw: {title: 'Draw & Modify', file: 'Draw'},\n    geolocation: {title: 'Geolocation', file: 'Geolocation'},\n    vectortiles: {title: 'Vector tiles', file: 'VectorTiles'},\n    reproj: {title: 'Reprojection', file: 'Reprojection'},\n    igc: {title: 'Performance', file: 'IGC'}\n};\n\n// These two bring in huge bundles and are lazy-loaded\nconst ReadmeBlock = React.lazy(() => import(/* webpackPrefetch: true */ './ReadmeBlock'));\nconst CodeBlock = React.lazy(() => import(/* webpackPrefetch: true */ './CodeBlock'));\n\nfor (const ex of Object.keys(examples)) {\n    examples[ex].comp = React.lazy(\n        () => import(/* webpackPrefetch: true */ `./${examples[ex].file}.tsx`)\n    );\n    examples[ex].code = import(\n        /* webpackPrefetch: true */ `!!raw-loader!./${examples[ex].file}.tsx`\n    ).then((code) => code.default);\n}\n\nconst LeftMenuItem = (props): JSX.Element => (\n    <Link to={props.id}>\n        <Button block={true} variant='light'>\n            {props.title}\n        </Button>\n    </Link>\n);\n\nconst App = (): JSX.Element => {\n    return (\n        <Router>\n            <h1 className='m-2'>\n                <strong>rlayers Examples</strong>\n            </h1>\n            <div className='d-flex flex-row p-3'>\n                <div className='d-flex flex-column left-menu mr-1'>\n                    <LeftMenuItem id={''} title={'Home'} />\n                    {Object.keys(examples).map((e) => (\n                        <LeftMenuItem key={e} id={e} title={examples[e].title} />\n                    ))}\n                </div>\n                <div className='d-flex flex-column w-100 overflow-hidden'>\n                    <div className='fluid-container'>\n                        <Route exact path='/'>\n                            <div className='ml-2'>\n                                <React.Suspense fallback={<div>Loading...</div>}>\n                                    <ReadmeBlock />\n                                </React.Suspense>\n                            </div>\n                        </Route>\n                        {Object.keys(examples).map((e) => (\n                            <Route key={e} path={`/${e}`}>\n                                <div className='row'>\n                                    <div className='col-12 col-xl-5 mb-1'>\n                                        <React.Suspense fallback={<div>Loading component...</div>}>\n                                            {React.createElement(examples[e].comp)}\n                                        </React.Suspense>\n                                    </div>\n                                    <div className='col-12 col-xl-7 codeblock'>\n                                        <React.Suspense fallback={<div>Parsing code...</div>}>\n                                            <CodeBlock code={examples[e].code} />\n                                        </React.Suspense>\n                                    </div>\n                                </div>\n                            </Route>\n                        ))}\n                    </div>\n                </div>\n            </div>\n        </Router>\n    );\n};\n\nexport default App;\n"}}]);