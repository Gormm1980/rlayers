(self.webpackChunkrlayers=self.webpackChunkrlayers||[]).push([[3433],{23433:(r,e,t)=>{"use strict";t.r(e),t.d(e,{default:()=>n});const n="import React, {useCallback} from 'react';\r\nimport {Feature} from 'ol';\r\nimport {fromLonLat} from 'ol/proj';\r\nimport {MVT} from 'ol/format';\r\nimport 'ol/ol.css';\r\n\r\nimport {RMap, RLayerTile, RLayerVectorTile, MapBrowserEvent} from 'rlayers';\r\nimport {useRStyle, RStyle, RStroke, RFill, RCircle, RText} from 'rlayers/style';\r\n\r\nconst degree = 111319.49079327358;\r\nconst fonts = {\r\n    0: {width: 6, font: '1.6rem helvetica,sans-serif'},\r\n    1: {width: 5, font: '1.2rem helvetica,sans-serif'},\r\n    2: {width: 3, font: '1rem helvetica,sans-serif'},\r\n    def: {width: 1, font: '0.6rem helvetica,sans-serif'}\r\n};\r\n\r\n// If you know about any open and free to use vector tile services, please let me know\r\n// This example uses a primitive pbf tile server based on geojson-vt\r\n// You can use the server set up at https://react-layers.meteo.guru/tiles\r\n// Or clone the full source code from https://github.com/mmomtchev/geojson-vt-server.git\r\nexport default function VectorTiles(): JSX.Element {\r\n    const [country, setCountry] = React.useState('');\r\n    const styles = {\r\n        borders: useRStyle(),\r\n        towns: useRStyle()\r\n    };\r\n    return (\r\n        <React.Fragment>\r\n            <RStyle ref={styles.borders}>\r\n                {/* This is the borders style */}\r\n                <RStroke color='#007bff' width={2} />\r\n                <RFill color='transparent' />\r\n            </RStyle>\r\n\r\n            <RStyle\r\n                ref={styles.towns}\r\n                render={useCallback((feature: Feature) => {\r\n                    /* This is a the towns style\r\n                     *\r\n                     * This is a dynamic style that creates a new object\r\n                     * every time it is access\r\n                     * Use with care\r\n                     */\r\n\r\n                    const {width, font} = fonts[feature.get('p')] ?? fonts.def;\r\n                    const color =\r\n                        '#ffff' +\r\n                        feature.get('c').charAt(0).toString('hex').substring(0, 2).padStart(2, '0');\r\n                    return (\r\n                        <React.Fragment>\r\n                            <RCircle radius={width}>\r\n                                <RStroke color={'#007bff'} width={width} />\r\n                                <RFill color={'#007bff'} />\r\n                            </RCircle>\r\n                            <RText font='helvetica' text={feature.get('n')}>\r\n                                <RStroke color={'#007bff'} width={2} />\r\n                                <RFill color={color} />\r\n                            </RText>\r\n                        </React.Fragment>\r\n                    );\r\n                }, [])}\r\n            />\r\n            <RMap className='example-map' center={fromLonLat([2.364, 48.82])} zoom={8}>\r\n                {/* This is the background raster map */}\r\n                <RLayerTile\r\n                    properties={{label: 'Watercolor'}}\r\n                    url='http://c.tile.stamen.com/watercolor/{z}/{x}/{y}.jpg'\r\n                />\r\n                {/* These are the administrative borders */}\r\n                <RLayerVectorTile\r\n                    onPointerEnter={React.useCallback(\r\n                        (e: MapBrowserEvent) =>\r\n                            e.target?.get &&\r\n                            setCountry(e.target.get('n') + ', ' + e.target.get('c')),\r\n                        [setCountry]\r\n                    )}\r\n                    url='https://react-layers.meteo.guru/tiles/admin/{z}/{x}/{y}'\r\n                    style={styles.borders}\r\n                    format={new MVT()}\r\n                />\r\n                {/* These are the cities */}\r\n                <RLayerVectorTile\r\n                    url='https://react-layers.meteo.guru/tiles/place/0/{z}/{x}/{y}'\r\n                    maxResolution={0.01 * degree}\r\n                    style={styles.towns}\r\n                    format={new MVT()}\r\n                />\r\n                {/* The towns visible only when zoomed in */}\r\n                <RLayerVectorTile\r\n                    url='https://react-layers.meteo.guru/tiles/place/1/{z}/{x}/{y}'\r\n                    maxResolution={0.0025 * degree}\r\n                    style={styles.towns}\r\n                    format={new MVT()}\r\n                />\r\n                {/* The small villages at maximum resolution */}\r\n                <RLayerVectorTile\r\n                    url='https://react-layers.meteo.guru/tiles/place/2/{z}/{x}/{y}'\r\n                    maxResolution={0.0005 * degree}\r\n                    style={styles.towns}\r\n                    format={new MVT()}\r\n                />\r\n            </RMap>\r\n            <div className='mx-0 mt-0 mb-3 p-1 w-100 jumbotron shadow shadow'>\r\n                <p>\r\n                    You are now in <strong>{country}</strong>\r\n                </p>\r\n            </div>\r\n        </React.Fragment>\r\n    );\r\n}\r\n"}}]);