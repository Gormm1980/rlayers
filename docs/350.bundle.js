(self.webpackChunkrlayers=self.webpackChunkrlayers||[]).push([[350],{30350:(r,n,e)=>{"use strict";e.r(n),e.d(n,{default:()=>o});const o="import React from 'react';\r\nimport {fromLonLat} from 'ol/proj';\r\nimport {Coordinate} from 'ol/coordinate';\r\nimport {Point} from 'ol/geom';\r\nimport 'ol/ol.css';\r\n\r\nimport {RMap, ROSM, RLayerVector, RFeature, ROverlay} from 'rlayers';\r\nimport pacman from './svg/pacman.svg';\r\n\r\nconst coords: Record<string, Coordinate> = {\r\n    origin: [2.364, 48.82],\r\n    ArcDeTriomphe: [2.295, 48.8737]\r\n};\r\n\r\nexport default function AnimatedOverlay(): JSX.Element {\r\n    return (\r\n        <RMap className='example-map' center={fromLonLat(coords.origin)} zoom={11}>\r\n            <ROSM />\r\n            <RLayerVector zIndex={10}>\r\n                <RFeature geometry={new Point(fromLonLat(coords.ArcDeTriomphe))}>\r\n                    <ROverlay className='no-interaction'>\r\n                        <img\r\n                            src={pacman}\r\n                            style={{\r\n                                position: 'relative',\r\n                                top: -24,\r\n                                left: -24,\r\n                                userSelect: 'none',\r\n                                pointerEvents: 'none'\r\n                            }}\r\n                            width={48}\r\n                            height={48}\r\n                            alt='animated icon'\r\n                        />\r\n                    </ROverlay>\r\n                </RFeature>\r\n            </RLayerVector>\r\n        </RMap>\r\n    );\r\n}\r\n"}}]);